
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803800  00803800  0000056a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004f6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00803800  00803800  0000056a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000056a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000059c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  000005dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000281d  00000000  00000000  0000061c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001a97  00000000  00000000  00002e39  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003b3  00000000  00000000  000048d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000007c  00000000  00000000  00004c84  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001479  00000000  00000000  00004d00  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000071  00000000  00000000  00006179  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  000061ea  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   8:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  10:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  14:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  18:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  1c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  20:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  24:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  28:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  2c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  30:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  34:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  38:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  3c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  40:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  44:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  48:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  4c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  50:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  54:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__vector_21>
  58:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  5c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  60:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  64:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  68:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  6c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  70:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  74:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  78:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	cd bf       	out	0x3d, r28	; 61
  84:	df e3       	ldi	r29, 0x3F	; 63
  86:	de bf       	out	0x3e, r29	; 62

00000088 <__do_clear_bss>:
  88:	28 e3       	ldi	r18, 0x38	; 56
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b8 e3       	ldi	r27, 0x38	; 56
  8e:	01 c0       	rjmp	.+2      	; 0x92 <.do_clear_bss_start>

00000090 <.do_clear_bss_loop>:
  90:	1d 92       	st	X+, r1

00000092 <.do_clear_bss_start>:
  92:	a4 30       	cpi	r26, 0x04	; 4
  94:	b2 07       	cpc	r27, r18
  96:	e1 f7       	brne	.-8      	; 0x90 <.do_clear_bss_loop>
  98:	0e 94 cd 00 	call	0x19a	; 0x19a <main>
  9c:	0c 94 79 02 	jmp	0x4f2	; 0x4f2 <_exit>

000000a0 <__bad_interrupt>:
  a0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a4 <__vector_21>:

#define PER_CELL_CUTOFF 3.0

float startup_voltage = 0.0;

ISR(ADC0_WCOMP_vect) {
  a4:	1f 92       	push	r1
  a6:	0f 92       	push	r0
  a8:	0f b6       	in	r0, 0x3f	; 63
  aa:	0f 92       	push	r0
  ac:	11 24       	eor	r1, r1
  ae:	ff cf       	rjmp	.-2      	; 0xae <__vector_21+0xa>

000000b0 <set_clk>:
		// Cutoff voltage
	}
}

void set_clk(void) {
	CLKCTRL.MCLKCTRLA = CLKCTRL_CLKSEL_OSC20M_gc;	// Select 20MHz internal oscillator
  b0:	e0 e6       	ldi	r30, 0x60	; 96
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	10 82       	st	Z, r1
	CLKCTRL.MCLKCTRLB = CLKCTRL_PEN_bm				// Enable prescaler
  b6:	81 e0       	ldi	r24, 0x01	; 1
  b8:	81 83       	std	Z+1, r24	; 0x01
  ba:	08 95       	ret

000000bc <init_pwm>:
					| CLKCTRL_PDIV_2X_gc;			// Set /2 prescaler for 10MHz
}

void init_pwm(void) {
	TCA0.SINGLE.CTRLD = TCA_SINGLE_SPLITM_bm;		// Enable split mode
  bc:	e0 e0       	ldi	r30, 0x00	; 0
  be:	fa e0       	ldi	r31, 0x0A	; 10
  c0:	81 e0       	ldi	r24, 0x01	; 1
  c2:	83 83       	std	Z+3, r24	; 0x03
	TCA0.SPLIT.HPER = 0xff;							// Set high timer period of 255
  c4:	9f ef       	ldi	r25, 0xFF	; 255
  c6:	97 a3       	std	Z+39, r25	; 0x27
	TCA0.SPLIT.LPER = 0xff;							// Set low timer period of 255
  c8:	96 a3       	std	Z+38, r25	; 0x26
	TCA0.SPLIT.HCNT = 0;							// Reset high timer initial count
  ca:	11 a2       	std	Z+33, r1	; 0x21
	TCA0.SPLIT.LCNT = 0;							// Reset low timer initial count
  cc:	10 a2       	std	Z+32, r1	; 0x20
	TCA0.SPLIT.CTRLB = TCA_SPLIT_HCMP0EN_bm			// Enable high timer output 0
  ce:	97 e7       	ldi	r25, 0x77	; 119
  d0:	91 83       	std	Z+1, r25	; 0x01
					| TCA_SPLIT_HCMP1EN_bm			// Enable high timer output 1
					| TCA_SPLIT_HCMP2EN_bm			// Enable high timer output 2
					| TCA_SPLIT_LCMP0EN_bm			// Enable low timer output 0
					| TCA_SPLIT_LCMP1EN_bm			// Enable low timer output 1
					| TCA_SPLIT_LCMP2EN_bm;			// Enable low timer output 2
	TCA0.SPLIT.CTRLA = TCA_SPLIT_CLKSEL_DIV1_gc		// Set /1 clock prescaler for 39.2KHz
  d2:	80 83       	st	Z, r24
					| TCA_SPLIT_ENABLE_bm;			// Start timer
	
	TCA0.SPLIT.HCMP0 = 0;							// Set initial value to 0
  d4:	11 a6       	std	Z+41, r1	; 0x29
	TCA0.SPLIT.HCMP1 = 0;							// Set initial value to 0
  d6:	13 a6       	std	Z+43, r1	; 0x2b
	TCA0.SPLIT.HCMP2 = 0;							// Set initial value to 0
  d8:	15 a6       	std	Z+45, r1	; 0x2d
	TCA0.SPLIT.LCMP0 = 0;							// Set initial value to 0
  da:	10 a6       	std	Z+40, r1	; 0x28
	TCA0.SPLIT.LCMP1 = 0;							// Set initial value to 0
  dc:	12 a6       	std	Z+42, r1	; 0x2a
	TCA0.SPLIT.LCMP2 = 0;							// Set initial value to 0
  de:	14 a6       	std	Z+44, r1	; 0x2c
	
	PORTMUX.CTRLC = PORTMUX_TCA02_bm;				// Map WO2 to alternate PB5
  e0:	94 e0       	ldi	r25, 0x04	; 4
  e2:	90 93 02 02 	sts	0x0202, r25	; 0x800202 <__RODATA_PM_OFFSET__+0x7f8202>
	PORTB.DIRSET = 1 << 0;							// Set PB0 as output
  e6:	e0 e2       	ldi	r30, 0x20	; 32
  e8:	f4 e0       	ldi	r31, 0x04	; 4
  ea:	81 83       	std	Z+1, r24	; 0x01
	PORTB.DIRSET = 1 << 1;							// Set PB1 as output
  ec:	82 e0       	ldi	r24, 0x02	; 2
  ee:	81 83       	std	Z+1, r24	; 0x01
	PORTB.DIRSET = 1 << 5;							// Set PB5 as output
  f0:	80 e2       	ldi	r24, 0x20	; 32
  f2:	81 83       	std	Z+1, r24	; 0x01
	PORTA.DIRSET = 1 << 3;							// Set PA3 as output
  f4:	e0 e0       	ldi	r30, 0x00	; 0
  f6:	f4 e0       	ldi	r31, 0x04	; 4
  f8:	98 e0       	ldi	r25, 0x08	; 8
  fa:	91 83       	std	Z+1, r25	; 0x01
	PORTA.DIRSET = 1 << 4;							// Set PA4 as output
  fc:	90 e1       	ldi	r25, 0x10	; 16
  fe:	91 83       	std	Z+1, r25	; 0x01
	PORTA.DIRSET = 1 << 5;							// Set PA5 as output
 100:	81 83       	std	Z+1, r24	; 0x01
 102:	08 95       	ret

00000104 <init_adc_and_cutoff>:
}

void init_adc_and_cutoff(void) {
 104:	cf 93       	push	r28
 106:	df 93       	push	r29
	// Configured to get 94 readings per second
	ADC0.CTRLB = ADC_SAMPNUM_ACC64_gc;			// Take 64 samples per reading
 108:	e0 e0       	ldi	r30, 0x00	; 0
 10a:	f6 e0       	ldi	r31, 0x06	; 6
 10c:	86 e0       	ldi	r24, 0x06	; 6
 10e:	81 83       	std	Z+1, r24	; 0x01
	ADC0.CTRLC = ADC_REFSEL_VDDREF_gc			// Select VDD as reference
 110:	86 e1       	ldi	r24, 0x16	; 22
 112:	82 83       	std	Z+2, r24	; 0x02
				| ADC_PRESC_DIV128_gc;			// Select /128 prescaler for 78KHz
	ADC0.CTRLA = ADC_RESSEL_10BIT_gc			// Set 10 bit resolution
 114:	83 e0       	ldi	r24, 0x03	; 3
 116:	80 83       	st	Z, r24
				| ADC_FREERUN_bm				// Set free-running
				| ADC_ENABLE_bm;				// Enable
	ADC0.MUXPOS = ADC_MUXPOS1_bm;				// Set PA1 as input
 118:	82 e0       	ldi	r24, 0x02	; 2
 11a:	86 83       	std	Z+6, r24	; 0x06
	ADC0.COMMAND = ADC_STCONV_bm;				// Start running
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	80 87       	std	Z+8, r24	; 0x08
	
	// Wait for first conversion to complete
	while (ADC0.INTFLAGS & ADC_RESRDY_bm) continue;
 120:	80 91 0b 06 	lds	r24, 0x060B	; 0x80060b <__RODATA_PM_OFFSET__+0x7f860b>
 124:	80 fd       	sbrc	r24, 0
 126:	fc cf       	rjmp	.-8      	; 0x120 <init_adc_and_cutoff+0x1c>
	
	// Figure out cell count and appropriate window threshold
	float conversion_factor = (3.3/(1 << 10))*(10.0/37.0);
	startup_voltage = ADC0.RES * conversion_factor;
 128:	c0 e0       	ldi	r28, 0x00	; 0
 12a:	d6 e0       	ldi	r29, 0x06	; 6
 12c:	68 89       	ldd	r22, Y+16	; 0x10
 12e:	79 89       	ldd	r23, Y+17	; 0x11
 130:	80 e0       	ldi	r24, 0x00	; 0
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	0e 94 7e 01 	call	0x2fc	; 0x2fc <__floatunsisf>
 138:	26 e0       	ldi	r18, 0x06	; 6
 13a:	33 e5       	ldi	r19, 0x53	; 83
 13c:	44 e6       	ldi	r20, 0x64	; 100
 13e:	5a e3       	ldi	r21, 0x3A	; 58
 140:	0e 94 0c 02 	call	0x418	; 0x418 <__mulsf3>
 144:	60 93 00 38 	sts	0x3800, r22	; 0x803800 <__DATA_REGION_ORIGIN__>
 148:	70 93 01 38 	sts	0x3801, r23	; 0x803801 <__DATA_REGION_ORIGIN__+0x1>
 14c:	80 93 02 38 	sts	0x3802, r24	; 0x803802 <__DATA_REGION_ORIGIN__+0x2>
 150:	90 93 03 38 	sts	0x3803, r25	; 0x803803 <__DATA_REGION_ORIGIN__+0x3>
	uint8_t cell_count = startup_voltage / PER_CELL_CUTOFF;
 154:	20 e0       	ldi	r18, 0x00	; 0
 156:	30 e0       	ldi	r19, 0x00	; 0
 158:	40 e4       	ldi	r20, 0x40	; 64
 15a:	50 e4       	ldi	r21, 0x40	; 64
 15c:	0e 94 dd 00 	call	0x1ba	; 0x1ba <__divsf3>
 160:	0e 94 4f 01 	call	0x29e	; 0x29e <__fixunssfsi>
	uint16_t threshold = (PER_CELL_CUTOFF * cell_count) / conversion_factor;
 164:	70 e0       	ldi	r23, 0x00	; 0
 166:	80 e0       	ldi	r24, 0x00	; 0
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	0e 94 80 01 	call	0x300	; 0x300 <__floatsisf>
 16e:	20 e0       	ldi	r18, 0x00	; 0
 170:	30 e0       	ldi	r19, 0x00	; 0
 172:	40 e4       	ldi	r20, 0x40	; 64
 174:	50 e4       	ldi	r21, 0x40	; 64
 176:	0e 94 0c 02 	call	0x418	; 0x418 <__mulsf3>
 17a:	26 e0       	ldi	r18, 0x06	; 6
 17c:	33 e5       	ldi	r19, 0x53	; 83
 17e:	44 e6       	ldi	r20, 0x64	; 100
 180:	5a e3       	ldi	r21, 0x3A	; 58
 182:	0e 94 dd 00 	call	0x1ba	; 0x1ba <__divsf3>
 186:	0e 94 4f 01 	call	0x29e	; 0x29e <__fixunssfsi>
	
	ADC0.WINLTH = threshold;					// Set window low threshold
 18a:	6b 8b       	std	Y+19, r22	; 0x13
	ADC0.INTCTRL = ADC_WCMP_bm;					// Enable interrupt
 18c:	82 e0       	ldi	r24, 0x02	; 2
 18e:	8a 87       	std	Y+10, r24	; 0x0a
	ADC0.CTRLE = ADC_WINCM_BELOW_gc;			// Set mode to below and enable
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	8c 83       	std	Y+4, r24	; 0x04
	
}
 194:	df 91       	pop	r29
 196:	cf 91       	pop	r28
 198:	08 95       	ret

0000019a <main>:

int main(void) {
	set_clk();
 19a:	0e 94 58 00 	call	0xb0	; 0xb0 <set_clk>
	init_pwm();
 19e:	0e 94 5e 00 	call	0xbc	; 0xbc <init_pwm>
	init_adc_and_cutoff();
 1a2:	0e 94 82 00 	call	0x104	; 0x104 <init_adc_and_cutoff>
	
	while (1) {
		TCA0.SPLIT.HCMP0 = 127;
 1a6:	e0 e0       	ldi	r30, 0x00	; 0
 1a8:	fa e0       	ldi	r31, 0x0A	; 10
 1aa:	8f e7       	ldi	r24, 0x7F	; 127
 1ac:	81 a7       	std	Z+41, r24	; 0x29
		TCA0.SPLIT.HCMP1 = 127;
 1ae:	83 a7       	std	Z+43, r24	; 0x2b
		TCA0.SPLIT.HCMP2 = 127;
 1b0:	85 a7       	std	Z+45, r24	; 0x2d
		TCA0.SPLIT.LCMP0 = 127;
 1b2:	80 a7       	std	Z+40, r24	; 0x28
		TCA0.SPLIT.LCMP1 = 127;
 1b4:	82 a7       	std	Z+42, r24	; 0x2a
		TCA0.SPLIT.LCMP2 = 127;
 1b6:	84 a7       	std	Z+44, r24	; 0x2c
 1b8:	f6 cf       	rjmp	.-20     	; 0x1a6 <main+0xc>

000001ba <__divsf3>:
 1ba:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <__divsf3x>
 1be:	0c 94 d2 01 	jmp	0x3a4	; 0x3a4 <__fp_round>
 1c2:	0e 94 cb 01 	call	0x396	; 0x396 <__fp_pscB>
 1c6:	58 f0       	brcs	.+22     	; 0x1de <__divsf3+0x24>
 1c8:	0e 94 c4 01 	call	0x388	; 0x388 <__fp_pscA>
 1cc:	40 f0       	brcs	.+16     	; 0x1de <__divsf3+0x24>
 1ce:	29 f4       	brne	.+10     	; 0x1da <__divsf3+0x20>
 1d0:	5f 3f       	cpi	r21, 0xFF	; 255
 1d2:	29 f0       	breq	.+10     	; 0x1de <__divsf3+0x24>
 1d4:	0c 94 bb 01 	jmp	0x376	; 0x376 <__fp_inf>
 1d8:	51 11       	cpse	r21, r1
 1da:	0c 94 06 02 	jmp	0x40c	; 0x40c <__fp_szero>
 1de:	0c 94 c1 01 	jmp	0x382	; 0x382 <__fp_nan>

000001e2 <__divsf3x>:
 1e2:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <__fp_split3>
 1e6:	68 f3       	brcs	.-38     	; 0x1c2 <__divsf3+0x8>

000001e8 <__divsf3_pse>:
 1e8:	99 23       	and	r25, r25
 1ea:	b1 f3       	breq	.-20     	; 0x1d8 <__divsf3+0x1e>
 1ec:	55 23       	and	r21, r21
 1ee:	91 f3       	breq	.-28     	; 0x1d4 <__divsf3+0x1a>
 1f0:	95 1b       	sub	r25, r21
 1f2:	55 0b       	sbc	r21, r21
 1f4:	bb 27       	eor	r27, r27
 1f6:	aa 27       	eor	r26, r26
 1f8:	62 17       	cp	r22, r18
 1fa:	73 07       	cpc	r23, r19
 1fc:	84 07       	cpc	r24, r20
 1fe:	38 f0       	brcs	.+14     	; 0x20e <__divsf3_pse+0x26>
 200:	9f 5f       	subi	r25, 0xFF	; 255
 202:	5f 4f       	sbci	r21, 0xFF	; 255
 204:	22 0f       	add	r18, r18
 206:	33 1f       	adc	r19, r19
 208:	44 1f       	adc	r20, r20
 20a:	aa 1f       	adc	r26, r26
 20c:	a9 f3       	breq	.-22     	; 0x1f8 <__divsf3_pse+0x10>
 20e:	35 d0       	rcall	.+106    	; 0x27a <__divsf3_pse+0x92>
 210:	0e 2e       	mov	r0, r30
 212:	3a f0       	brmi	.+14     	; 0x222 <__divsf3_pse+0x3a>
 214:	e0 e8       	ldi	r30, 0x80	; 128
 216:	32 d0       	rcall	.+100    	; 0x27c <__divsf3_pse+0x94>
 218:	91 50       	subi	r25, 0x01	; 1
 21a:	50 40       	sbci	r21, 0x00	; 0
 21c:	e6 95       	lsr	r30
 21e:	00 1c       	adc	r0, r0
 220:	ca f7       	brpl	.-14     	; 0x214 <__divsf3_pse+0x2c>
 222:	2b d0       	rcall	.+86     	; 0x27a <__divsf3_pse+0x92>
 224:	fe 2f       	mov	r31, r30
 226:	29 d0       	rcall	.+82     	; 0x27a <__divsf3_pse+0x92>
 228:	66 0f       	add	r22, r22
 22a:	77 1f       	adc	r23, r23
 22c:	88 1f       	adc	r24, r24
 22e:	bb 1f       	adc	r27, r27
 230:	26 17       	cp	r18, r22
 232:	37 07       	cpc	r19, r23
 234:	48 07       	cpc	r20, r24
 236:	ab 07       	cpc	r26, r27
 238:	b0 e8       	ldi	r27, 0x80	; 128
 23a:	09 f0       	breq	.+2      	; 0x23e <__divsf3_pse+0x56>
 23c:	bb 0b       	sbc	r27, r27
 23e:	80 2d       	mov	r24, r0
 240:	bf 01       	movw	r22, r30
 242:	ff 27       	eor	r31, r31
 244:	93 58       	subi	r25, 0x83	; 131
 246:	5f 4f       	sbci	r21, 0xFF	; 255
 248:	3a f0       	brmi	.+14     	; 0x258 <__divsf3_pse+0x70>
 24a:	9e 3f       	cpi	r25, 0xFE	; 254
 24c:	51 05       	cpc	r21, r1
 24e:	78 f0       	brcs	.+30     	; 0x26e <__divsf3_pse+0x86>
 250:	0c 94 bb 01 	jmp	0x376	; 0x376 <__fp_inf>
 254:	0c 94 06 02 	jmp	0x40c	; 0x40c <__fp_szero>
 258:	5f 3f       	cpi	r21, 0xFF	; 255
 25a:	e4 f3       	brlt	.-8      	; 0x254 <__divsf3_pse+0x6c>
 25c:	98 3e       	cpi	r25, 0xE8	; 232
 25e:	d4 f3       	brlt	.-12     	; 0x254 <__divsf3_pse+0x6c>
 260:	86 95       	lsr	r24
 262:	77 95       	ror	r23
 264:	67 95       	ror	r22
 266:	b7 95       	ror	r27
 268:	f7 95       	ror	r31
 26a:	9f 5f       	subi	r25, 0xFF	; 255
 26c:	c9 f7       	brne	.-14     	; 0x260 <__divsf3_pse+0x78>
 26e:	88 0f       	add	r24, r24
 270:	91 1d       	adc	r25, r1
 272:	96 95       	lsr	r25
 274:	87 95       	ror	r24
 276:	97 f9       	bld	r25, 7
 278:	08 95       	ret
 27a:	e1 e0       	ldi	r30, 0x01	; 1
 27c:	66 0f       	add	r22, r22
 27e:	77 1f       	adc	r23, r23
 280:	88 1f       	adc	r24, r24
 282:	bb 1f       	adc	r27, r27
 284:	62 17       	cp	r22, r18
 286:	73 07       	cpc	r23, r19
 288:	84 07       	cpc	r24, r20
 28a:	ba 07       	cpc	r27, r26
 28c:	20 f0       	brcs	.+8      	; 0x296 <__divsf3_pse+0xae>
 28e:	62 1b       	sub	r22, r18
 290:	73 0b       	sbc	r23, r19
 292:	84 0b       	sbc	r24, r20
 294:	ba 0b       	sbc	r27, r26
 296:	ee 1f       	adc	r30, r30
 298:	88 f7       	brcc	.-30     	; 0x27c <__divsf3_pse+0x94>
 29a:	e0 95       	com	r30
 29c:	08 95       	ret

0000029e <__fixunssfsi>:
 29e:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <__fp_splitA>
 2a2:	88 f0       	brcs	.+34     	; 0x2c6 <__fixunssfsi+0x28>
 2a4:	9f 57       	subi	r25, 0x7F	; 127
 2a6:	98 f0       	brcs	.+38     	; 0x2ce <__fixunssfsi+0x30>
 2a8:	b9 2f       	mov	r27, r25
 2aa:	99 27       	eor	r25, r25
 2ac:	b7 51       	subi	r27, 0x17	; 23
 2ae:	b0 f0       	brcs	.+44     	; 0x2dc <__fixunssfsi+0x3e>
 2b0:	e1 f0       	breq	.+56     	; 0x2ea <__fixunssfsi+0x4c>
 2b2:	66 0f       	add	r22, r22
 2b4:	77 1f       	adc	r23, r23
 2b6:	88 1f       	adc	r24, r24
 2b8:	99 1f       	adc	r25, r25
 2ba:	1a f0       	brmi	.+6      	; 0x2c2 <__fixunssfsi+0x24>
 2bc:	ba 95       	dec	r27
 2be:	c9 f7       	brne	.-14     	; 0x2b2 <__fixunssfsi+0x14>
 2c0:	14 c0       	rjmp	.+40     	; 0x2ea <__fixunssfsi+0x4c>
 2c2:	b1 30       	cpi	r27, 0x01	; 1
 2c4:	91 f0       	breq	.+36     	; 0x2ea <__fixunssfsi+0x4c>
 2c6:	0e 94 05 02 	call	0x40a	; 0x40a <__fp_zero>
 2ca:	b1 e0       	ldi	r27, 0x01	; 1
 2cc:	08 95       	ret
 2ce:	0c 94 05 02 	jmp	0x40a	; 0x40a <__fp_zero>
 2d2:	67 2f       	mov	r22, r23
 2d4:	78 2f       	mov	r23, r24
 2d6:	88 27       	eor	r24, r24
 2d8:	b8 5f       	subi	r27, 0xF8	; 248
 2da:	39 f0       	breq	.+14     	; 0x2ea <__fixunssfsi+0x4c>
 2dc:	b9 3f       	cpi	r27, 0xF9	; 249
 2de:	cc f3       	brlt	.-14     	; 0x2d2 <__fixunssfsi+0x34>
 2e0:	86 95       	lsr	r24
 2e2:	77 95       	ror	r23
 2e4:	67 95       	ror	r22
 2e6:	b3 95       	inc	r27
 2e8:	d9 f7       	brne	.-10     	; 0x2e0 <__fixunssfsi+0x42>
 2ea:	3e f4       	brtc	.+14     	; 0x2fa <__fixunssfsi+0x5c>
 2ec:	90 95       	com	r25
 2ee:	80 95       	com	r24
 2f0:	70 95       	com	r23
 2f2:	61 95       	neg	r22
 2f4:	7f 4f       	sbci	r23, 0xFF	; 255
 2f6:	8f 4f       	sbci	r24, 0xFF	; 255
 2f8:	9f 4f       	sbci	r25, 0xFF	; 255
 2fa:	08 95       	ret

000002fc <__floatunsisf>:
 2fc:	e8 94       	clt
 2fe:	09 c0       	rjmp	.+18     	; 0x312 <__floatsisf+0x12>

00000300 <__floatsisf>:
 300:	97 fb       	bst	r25, 7
 302:	3e f4       	brtc	.+14     	; 0x312 <__floatsisf+0x12>
 304:	90 95       	com	r25
 306:	80 95       	com	r24
 308:	70 95       	com	r23
 30a:	61 95       	neg	r22
 30c:	7f 4f       	sbci	r23, 0xFF	; 255
 30e:	8f 4f       	sbci	r24, 0xFF	; 255
 310:	9f 4f       	sbci	r25, 0xFF	; 255
 312:	99 23       	and	r25, r25
 314:	a9 f0       	breq	.+42     	; 0x340 <__floatsisf+0x40>
 316:	f9 2f       	mov	r31, r25
 318:	96 e9       	ldi	r25, 0x96	; 150
 31a:	bb 27       	eor	r27, r27
 31c:	93 95       	inc	r25
 31e:	f6 95       	lsr	r31
 320:	87 95       	ror	r24
 322:	77 95       	ror	r23
 324:	67 95       	ror	r22
 326:	b7 95       	ror	r27
 328:	f1 11       	cpse	r31, r1
 32a:	f8 cf       	rjmp	.-16     	; 0x31c <__floatsisf+0x1c>
 32c:	fa f4       	brpl	.+62     	; 0x36c <__floatsisf+0x6c>
 32e:	bb 0f       	add	r27, r27
 330:	11 f4       	brne	.+4      	; 0x336 <__floatsisf+0x36>
 332:	60 ff       	sbrs	r22, 0
 334:	1b c0       	rjmp	.+54     	; 0x36c <__floatsisf+0x6c>
 336:	6f 5f       	subi	r22, 0xFF	; 255
 338:	7f 4f       	sbci	r23, 0xFF	; 255
 33a:	8f 4f       	sbci	r24, 0xFF	; 255
 33c:	9f 4f       	sbci	r25, 0xFF	; 255
 33e:	16 c0       	rjmp	.+44     	; 0x36c <__floatsisf+0x6c>
 340:	88 23       	and	r24, r24
 342:	11 f0       	breq	.+4      	; 0x348 <__floatsisf+0x48>
 344:	96 e9       	ldi	r25, 0x96	; 150
 346:	11 c0       	rjmp	.+34     	; 0x36a <__floatsisf+0x6a>
 348:	77 23       	and	r23, r23
 34a:	21 f0       	breq	.+8      	; 0x354 <__floatsisf+0x54>
 34c:	9e e8       	ldi	r25, 0x8E	; 142
 34e:	87 2f       	mov	r24, r23
 350:	76 2f       	mov	r23, r22
 352:	05 c0       	rjmp	.+10     	; 0x35e <__floatsisf+0x5e>
 354:	66 23       	and	r22, r22
 356:	71 f0       	breq	.+28     	; 0x374 <__floatsisf+0x74>
 358:	96 e8       	ldi	r25, 0x86	; 134
 35a:	86 2f       	mov	r24, r22
 35c:	70 e0       	ldi	r23, 0x00	; 0
 35e:	60 e0       	ldi	r22, 0x00	; 0
 360:	2a f0       	brmi	.+10     	; 0x36c <__floatsisf+0x6c>
 362:	9a 95       	dec	r25
 364:	66 0f       	add	r22, r22
 366:	77 1f       	adc	r23, r23
 368:	88 1f       	adc	r24, r24
 36a:	da f7       	brpl	.-10     	; 0x362 <__floatsisf+0x62>
 36c:	88 0f       	add	r24, r24
 36e:	96 95       	lsr	r25
 370:	87 95       	ror	r24
 372:	97 f9       	bld	r25, 7
 374:	08 95       	ret

00000376 <__fp_inf>:
 376:	97 f9       	bld	r25, 7
 378:	9f 67       	ori	r25, 0x7F	; 127
 37a:	80 e8       	ldi	r24, 0x80	; 128
 37c:	70 e0       	ldi	r23, 0x00	; 0
 37e:	60 e0       	ldi	r22, 0x00	; 0
 380:	08 95       	ret

00000382 <__fp_nan>:
 382:	9f ef       	ldi	r25, 0xFF	; 255
 384:	80 ec       	ldi	r24, 0xC0	; 192
 386:	08 95       	ret

00000388 <__fp_pscA>:
 388:	00 24       	eor	r0, r0
 38a:	0a 94       	dec	r0
 38c:	16 16       	cp	r1, r22
 38e:	17 06       	cpc	r1, r23
 390:	18 06       	cpc	r1, r24
 392:	09 06       	cpc	r0, r25
 394:	08 95       	ret

00000396 <__fp_pscB>:
 396:	00 24       	eor	r0, r0
 398:	0a 94       	dec	r0
 39a:	12 16       	cp	r1, r18
 39c:	13 06       	cpc	r1, r19
 39e:	14 06       	cpc	r1, r20
 3a0:	05 06       	cpc	r0, r21
 3a2:	08 95       	ret

000003a4 <__fp_round>:
 3a4:	09 2e       	mov	r0, r25
 3a6:	03 94       	inc	r0
 3a8:	00 0c       	add	r0, r0
 3aa:	11 f4       	brne	.+4      	; 0x3b0 <__fp_round+0xc>
 3ac:	88 23       	and	r24, r24
 3ae:	52 f0       	brmi	.+20     	; 0x3c4 <__fp_round+0x20>
 3b0:	bb 0f       	add	r27, r27
 3b2:	40 f4       	brcc	.+16     	; 0x3c4 <__fp_round+0x20>
 3b4:	bf 2b       	or	r27, r31
 3b6:	11 f4       	brne	.+4      	; 0x3bc <__fp_round+0x18>
 3b8:	60 ff       	sbrs	r22, 0
 3ba:	04 c0       	rjmp	.+8      	; 0x3c4 <__fp_round+0x20>
 3bc:	6f 5f       	subi	r22, 0xFF	; 255
 3be:	7f 4f       	sbci	r23, 0xFF	; 255
 3c0:	8f 4f       	sbci	r24, 0xFF	; 255
 3c2:	9f 4f       	sbci	r25, 0xFF	; 255
 3c4:	08 95       	ret

000003c6 <__fp_split3>:
 3c6:	57 fd       	sbrc	r21, 7
 3c8:	90 58       	subi	r25, 0x80	; 128
 3ca:	44 0f       	add	r20, r20
 3cc:	55 1f       	adc	r21, r21
 3ce:	59 f0       	breq	.+22     	; 0x3e6 <__fp_splitA+0x10>
 3d0:	5f 3f       	cpi	r21, 0xFF	; 255
 3d2:	71 f0       	breq	.+28     	; 0x3f0 <__fp_splitA+0x1a>
 3d4:	47 95       	ror	r20

000003d6 <__fp_splitA>:
 3d6:	88 0f       	add	r24, r24
 3d8:	97 fb       	bst	r25, 7
 3da:	99 1f       	adc	r25, r25
 3dc:	61 f0       	breq	.+24     	; 0x3f6 <__fp_splitA+0x20>
 3de:	9f 3f       	cpi	r25, 0xFF	; 255
 3e0:	79 f0       	breq	.+30     	; 0x400 <__LOCK_REGION_LENGTH__>
 3e2:	87 95       	ror	r24
 3e4:	08 95       	ret
 3e6:	12 16       	cp	r1, r18
 3e8:	13 06       	cpc	r1, r19
 3ea:	14 06       	cpc	r1, r20
 3ec:	55 1f       	adc	r21, r21
 3ee:	f2 cf       	rjmp	.-28     	; 0x3d4 <__fp_split3+0xe>
 3f0:	46 95       	lsr	r20
 3f2:	f1 df       	rcall	.-30     	; 0x3d6 <__fp_splitA>
 3f4:	08 c0       	rjmp	.+16     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3f6:	16 16       	cp	r1, r22
 3f8:	17 06       	cpc	r1, r23
 3fa:	18 06       	cpc	r1, r24
 3fc:	99 1f       	adc	r25, r25
 3fe:	f1 cf       	rjmp	.-30     	; 0x3e2 <__fp_splitA+0xc>
 400:	86 95       	lsr	r24
 402:	71 05       	cpc	r23, r1
 404:	61 05       	cpc	r22, r1
 406:	08 94       	sec
 408:	08 95       	ret

0000040a <__fp_zero>:
 40a:	e8 94       	clt

0000040c <__fp_szero>:
 40c:	bb 27       	eor	r27, r27
 40e:	66 27       	eor	r22, r22
 410:	77 27       	eor	r23, r23
 412:	cb 01       	movw	r24, r22
 414:	97 f9       	bld	r25, 7
 416:	08 95       	ret

00000418 <__mulsf3>:
 418:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3x>
 41c:	0c 94 d2 01 	jmp	0x3a4	; 0x3a4 <__fp_round>
 420:	0e 94 c4 01 	call	0x388	; 0x388 <__fp_pscA>
 424:	38 f0       	brcs	.+14     	; 0x434 <__mulsf3+0x1c>
 426:	0e 94 cb 01 	call	0x396	; 0x396 <__fp_pscB>
 42a:	20 f0       	brcs	.+8      	; 0x434 <__mulsf3+0x1c>
 42c:	95 23       	and	r25, r21
 42e:	11 f0       	breq	.+4      	; 0x434 <__mulsf3+0x1c>
 430:	0c 94 bb 01 	jmp	0x376	; 0x376 <__fp_inf>
 434:	0c 94 c1 01 	jmp	0x382	; 0x382 <__fp_nan>
 438:	11 24       	eor	r1, r1
 43a:	0c 94 06 02 	jmp	0x40c	; 0x40c <__fp_szero>

0000043e <__mulsf3x>:
 43e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <__fp_split3>
 442:	70 f3       	brcs	.-36     	; 0x420 <__mulsf3+0x8>

00000444 <__mulsf3_pse>:
 444:	95 9f       	mul	r25, r21
 446:	c1 f3       	breq	.-16     	; 0x438 <__mulsf3+0x20>
 448:	95 0f       	add	r25, r21
 44a:	50 e0       	ldi	r21, 0x00	; 0
 44c:	55 1f       	adc	r21, r21
 44e:	62 9f       	mul	r22, r18
 450:	f0 01       	movw	r30, r0
 452:	72 9f       	mul	r23, r18
 454:	bb 27       	eor	r27, r27
 456:	f0 0d       	add	r31, r0
 458:	b1 1d       	adc	r27, r1
 45a:	63 9f       	mul	r22, r19
 45c:	aa 27       	eor	r26, r26
 45e:	f0 0d       	add	r31, r0
 460:	b1 1d       	adc	r27, r1
 462:	aa 1f       	adc	r26, r26
 464:	64 9f       	mul	r22, r20
 466:	66 27       	eor	r22, r22
 468:	b0 0d       	add	r27, r0
 46a:	a1 1d       	adc	r26, r1
 46c:	66 1f       	adc	r22, r22
 46e:	82 9f       	mul	r24, r18
 470:	22 27       	eor	r18, r18
 472:	b0 0d       	add	r27, r0
 474:	a1 1d       	adc	r26, r1
 476:	62 1f       	adc	r22, r18
 478:	73 9f       	mul	r23, r19
 47a:	b0 0d       	add	r27, r0
 47c:	a1 1d       	adc	r26, r1
 47e:	62 1f       	adc	r22, r18
 480:	83 9f       	mul	r24, r19
 482:	a0 0d       	add	r26, r0
 484:	61 1d       	adc	r22, r1
 486:	22 1f       	adc	r18, r18
 488:	74 9f       	mul	r23, r20
 48a:	33 27       	eor	r19, r19
 48c:	a0 0d       	add	r26, r0
 48e:	61 1d       	adc	r22, r1
 490:	23 1f       	adc	r18, r19
 492:	84 9f       	mul	r24, r20
 494:	60 0d       	add	r22, r0
 496:	21 1d       	adc	r18, r1
 498:	82 2f       	mov	r24, r18
 49a:	76 2f       	mov	r23, r22
 49c:	6a 2f       	mov	r22, r26
 49e:	11 24       	eor	r1, r1
 4a0:	9f 57       	subi	r25, 0x7F	; 127
 4a2:	50 40       	sbci	r21, 0x00	; 0
 4a4:	9a f0       	brmi	.+38     	; 0x4cc <__mulsf3_pse+0x88>
 4a6:	f1 f0       	breq	.+60     	; 0x4e4 <__mulsf3_pse+0xa0>
 4a8:	88 23       	and	r24, r24
 4aa:	4a f0       	brmi	.+18     	; 0x4be <__mulsf3_pse+0x7a>
 4ac:	ee 0f       	add	r30, r30
 4ae:	ff 1f       	adc	r31, r31
 4b0:	bb 1f       	adc	r27, r27
 4b2:	66 1f       	adc	r22, r22
 4b4:	77 1f       	adc	r23, r23
 4b6:	88 1f       	adc	r24, r24
 4b8:	91 50       	subi	r25, 0x01	; 1
 4ba:	50 40       	sbci	r21, 0x00	; 0
 4bc:	a9 f7       	brne	.-22     	; 0x4a8 <__mulsf3_pse+0x64>
 4be:	9e 3f       	cpi	r25, 0xFE	; 254
 4c0:	51 05       	cpc	r21, r1
 4c2:	80 f0       	brcs	.+32     	; 0x4e4 <__mulsf3_pse+0xa0>
 4c4:	0c 94 bb 01 	jmp	0x376	; 0x376 <__fp_inf>
 4c8:	0c 94 06 02 	jmp	0x40c	; 0x40c <__fp_szero>
 4cc:	5f 3f       	cpi	r21, 0xFF	; 255
 4ce:	e4 f3       	brlt	.-8      	; 0x4c8 <__mulsf3_pse+0x84>
 4d0:	98 3e       	cpi	r25, 0xE8	; 232
 4d2:	d4 f3       	brlt	.-12     	; 0x4c8 <__mulsf3_pse+0x84>
 4d4:	86 95       	lsr	r24
 4d6:	77 95       	ror	r23
 4d8:	67 95       	ror	r22
 4da:	b7 95       	ror	r27
 4dc:	f7 95       	ror	r31
 4de:	e7 95       	ror	r30
 4e0:	9f 5f       	subi	r25, 0xFF	; 255
 4e2:	c1 f7       	brne	.-16     	; 0x4d4 <__mulsf3_pse+0x90>
 4e4:	fe 2b       	or	r31, r30
 4e6:	88 0f       	add	r24, r24
 4e8:	91 1d       	adc	r25, r1
 4ea:	96 95       	lsr	r25
 4ec:	87 95       	ror	r24
 4ee:	97 f9       	bld	r25, 7
 4f0:	08 95       	ret

000004f2 <_exit>:
 4f2:	f8 94       	cli

000004f4 <__stop_program>:
 4f4:	ff cf       	rjmp	.-2      	; 0x4f4 <__stop_program>
